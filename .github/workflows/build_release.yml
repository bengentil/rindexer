on:
  push:
    tags:
      - 'v*'

name: Build & Release

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        target:
          - armv7-unknown-linux-musleabihf
          - x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.${{ matrix.target }}
          push: true
          tags: ghcr.io/bengentil/rindexer:cross-${{ matrix.target }}-0.2.1-sqlite

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - run: echo '${{ needs.release.outputs.upload_url }}'

      - id: tag
        run: echo '::set-output name=version::'$(echo ${{ github.ref }} | awk -F/ '{print $NF}')

      - name: Upload executable
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/rindexer
          asset_name: rindexer-${{ steps.tag.outputs.version }}.${{ matrix.target }}
          asset_content_type: application/x-executable
